using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace casestudies
{
    abstract class UserInterface
    {
        public abstract void showFirstScreen();
        public abstract void showStudentScreen();
        public abstract void showAdminScreen();
        public abstract void showAllStudentsScreen();
        public abstract void showStudentRegistrationScreen();
        public abstract void introduceNewCourseScreen();
        public abstract void showAllCoursesScreen();
    }

    class Institute_Details : UserInterface
    {

        private string ans;
        public override void showFirstScreen()
        {
            do
            {


                Console.WriteLine("Welcome to SMS(Student Management System)");
                Console.WriteLine("Tell us who you are : \n1. Student\n2. Admin\n3.AllRegistered Students");
                Console.WriteLine("Enter your choice ( 1 or 2 or 3 ) : ");
                int op = Convert.ToInt32(Console.ReadLine());

                switch (op)
                {
                    case 1:
                        showStudentScreen();
                        break;
                    case 2:
                        showAdminScreen();
                        break;
                    case 3:
                        showAllStudentsScreen();
                        break;
                    default:
                        Console.WriteLine("Enter valid Option.....!");
                        break;
                }
                Console.WriteLine("Do you want to continue in Main Screen : Yes or No ");
                ans = Console.ReadLine();
            } while ((ans == "yes") || (ans == "Yes") || (ans == "y") || (ans == "Y"));
        }

        public override void showStudentScreen()
        {
            do
            {


                AppEngine ae = new AppEngine();
                Console.WriteLine("Select: \n1.Check your Details(Existing User)\n2.Registration(New User)\n3.Update Your Details\n4.Search Available Courses\n5.Enroll to Course in List");
                int op = Convert.ToInt32(Console.ReadLine());
                switch (op)
                {
                    case 1:
                        // Checks whether new registrartion or already existing user
                        ae.Student_Screen();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 2://New registration
                        this.showStudentRegistrationScreen();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 3:
                        //updating Student details
                        ae.UpdateStudentData();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 4:
                        //Showcase all available courses
                        Console.WriteLine("--------------------List of Courses------------------------");
                        ae.Available_Courses();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 5:
                        //Student enrolling to particular course
                        ae.UpdateCourseData();
                        Console.WriteLine("You have successfully enrolled you may Exit the Screen now");
                        break;
                    default:
                        Console.WriteLine("Enter valid Option....!");
                        break;



                }
                Console.WriteLine("Do you want to continue in Student Screen : Yes or No ");
                ans = Console.ReadLine();
            } while ((ans == "yes") || (ans == "Yes") || (ans == "y") || (ans == "Y"));

        }

        public override void showAdminScreen()
        {
            do
            {


                AppEngine aE = new AppEngine();
                Console.WriteLine("Select: \n1.Introduce New Course\n2.Courses Available\n3.Update Course Details\n4.Retrieve Particular Course in List\n5.Deleting Existing Student\n6.Delete Course\n7.Update Student Details\n8.Retrive the particular course Details");
                int op = Convert.ToInt32(Console.ReadLine());
                switch (op)
                {
                    case 1:
                        //If any new course want to add for Organization
                        this.introduceNewCourseScreen();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 2:
                        //list of existing courses
                        Console.WriteLine("-------------All Available Courses in Institute-------------------");
                        this.showAllCoursesScreen();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 3:
                        //updates in Course structure
                        aE.UpdateCourseData();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 4:
                        //getting particular course details
                        aE.enrolling_courses();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 5:
                        //deletes particular student
                        aE.DeleteStudentData();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 6:
                        //deletes existing course only that are not enrolled by any students
                        aE.DeleteCourseData();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 7:
                        //modify existing student details
                        aE.UpdateStudentData();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    case 8:
                        aE.Retrieve_Particular_Course();
                        Console.WriteLine("Action Completed you may Exit....!");
                        break;
                    default:
                        Console.WriteLine("Enter valid Option....!");
                        break;
                }
                Console.WriteLine("Do you want to continue in Admin Screen : Yes or No ");
                ans = Console.ReadLine();
            } while ((ans == "yes") || (ans == "Yes") || (ans == "y") || (ans == "Y"));
        }

        public override void showAllStudentsScreen()
        {
            AppEngine Ae = new AppEngine();
            Ae.Show_all_registered_Students();
        }
        public override void showStudentRegistrationScreen()
        {
            AppEngine A = new AppEngine();
            A.New_StudentRegistration();

        }
        public override void introduceNewCourseScreen()
        {
            AppEngine AE = new AppEngine();
            AE.Introducing_NewCourse();
        }
        public override void showAllCoursesScreen()
        {
            AppEngine ape = new AppEngine();
            ape.Available_Courses();
        }

    }
}
